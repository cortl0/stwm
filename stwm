#!/bin/bash

working_dir_path=~/.stwm
config_file_path=$working_dir_path/config.txt
temp_file_path=$working_dir_path/temp.txt

header_offset_x=0
header_offset_y=0
screen_width=0
screen_height=0
grid_width=8
grid_height=4
taskbar_height=40

window_x=0
window_y=0
window_size_x=0
window_size_y=0

window_num=$(xdotool getactivewindow)
window_geometry=$(xdotool getwindowgeometry $window_num)
echo $window_geometry

main()
{
    prepare
    start "$@"
}

prepare()
{
    [ ! -d $working_dir_path ] && mkdir $working_dir_path
    if [[ ! -e $config_file_path ]]; then
        calculate_config
        save_config
    fi
    read_config
    print_config
}

start()
{
    case $1 in
        move)
		    move_window "$@"
            ;;
        resize)
            resize_window "$@"
            ;;
        grid)
            grid "$@"
            ;;
        screen)
            screen "$@"
            ;;
        *)
            help
            exit 1
            ;;
    esac
}

calculate_config()
{
    screen_geometry=$(xdotool getdisplaygeometry)
    echo $screen_geometry
    geometry=$(grep -Eo '[[:digit:]]+|[^[:digit:]]+' <<<"$screen_geometry")
    echo "${geometry[@]}"
    echo "${geometry[@]}" > $temp_file_path
    readarray -t lines < $temp_file_path
    screen_width=$((10#${lines[0]}))
    screen_height=$((10#${lines[2]}))
    screen_height=$((screen_height-taskbar_height))

    xdotool windowmove $window_num 0 0
    window_geometry=$(xdotool getwindowgeometry $window_num)
    parse_window_geometry
    header_offset_x=$window_x
    header_offset_y=$window_y
}

grid()
{
    grid_width=$2
    grid_height=$3
    save_config
}

help()
{
	echo "help:"
	echo "stwm <mode> [args...]"
	echo "    modes:"
	echo "        move <direction of movement using the upper left corner>"
	echo "            directions of movement:"
	echo "                left"
	echo "                right"
	echo "                up"
	echo "                down"
	echo "        resize <direction of resizing using the lower right corner>"
	echo "            directions of resize:"
	echo "                left"
	echo "                right"
	echo "                up"
	echo "                down"
	echo "        grid <width> <height>"
	echo "        screen <width> <height>"
}

move_window()
{
    grid_cell_size_x=$(($screen_width / $grid_widht))
    grid_cell_size_y=$(($screen_height / $grid_height))
    parse_window_geometry
    window_x=$((window_x-header_offset_x))
    window_y=$((window_y-header_offset_y))

    case $2 in
        left)
            window_x=$((((window_x/grid_cell_size_x)-1)*grid_cell_size_x))
            ;;
        right)
            window_x=$((((window_x/grid_cell_size_x)+1)*grid_cell_size_x))
            ;;
        up)
            window_y=$((((window_y/grid_cell_size_y)-1)*grid_cell_size_y))
            ;;
        down)
            window_y=$((((window_y/grid_cell_size_y)+1)*grid_cell_size_y))
            ;;
        *)
            help
            exit 1
            ;;
    esac
    xdotool windowmove $window_num $window_x $window_y
}

parse_window_geometry()
{
    geometry=$(grep -Eo '[[:digit:]]+|[^[:digit:]]+' <<<"$window_geometry")
    echo "${geometry[@]}" > $temp_file_path
    readarray -t lines < $temp_file_path
    window_x=$((10#${lines[3]}))
    window_y=$((10#${lines[5]}))
    window_size_x=$((10#${lines[10]}))
    window_size_y=$((10#${lines[12]}))
}

print_config()
{
    echo $screen_width
    echo $screen_height
    echo $grid_width
    echo $grid_height
    echo $header_offset_x
    echo $header_offset_y
}

read_config()
{
    readarray -t lines < $config_file_path
    screen_width=${lines[0]}
    screen_height=${lines[1]}
    grid_width=${lines[2]}
    grid_height=${lines[3]}

    screen_width=${lines[0]}
    screen_height=${lines[1]}
    grid_widht=${lines[2]}
    grid_height=${lines[3]}

    header_offset_x=${lines[4]}
    header_offset_y=${lines[5]}

    #taskbar_height=${lines[6]}
}

resize_window()
{
    grid_cell_size_x=$(($screen_width / $grid_widht))
    grid_cell_size_y=$(($screen_height / $grid_height))
    parse_window_geometry

    window_x=$((window_x-header_offset_x))
    window_y=$((window_y-header_offset_y))
    window_size_x=$((window_size_x+header_offset_x))
    window_size_y=$((window_size_y+header_offset_y))

    window_x=$(((window_x/grid_cell_size_x)*grid_cell_size_x))
    window_y=$(((window_y/grid_cell_size_y)*grid_cell_size_y))
    window_size_x=$(((window_size_x/grid_cell_size_x)*grid_cell_size_x))
    window_size_y=$(((window_size_y/grid_cell_size_y)*grid_cell_size_y))
    full_window_size_x=$((window_x+window_size_x))
    full_window_size_y=$((window_y+window_size_y))

    case $2 in
        left)
            full_window_size_x=$((((full_window_size_x/grid_cell_size_x)-1)*grid_cell_size_x))
            ;;
        right)
            full_window_size_x=$((((full_window_size_x/grid_cell_size_x)+1)*grid_cell_size_x))
            ;;
        up)
            full_window_size_y=$((((full_window_size_y/grid_cell_size_y)-1)*grid_cell_size_y))
            ;;
        down)
            full_window_size_y=$((((full_window_size_y/grid_cell_size_y)+1)*grid_cell_size_y))
            ;;
        *)
            help
            exit 1
            ;;
    esac

    window_x=$((full_window_size_x-window_x))
    window_y=$((full_window_size_y-window_y))

    xdotool windowsize $window_num $window_x $window_y
}

save_config()
{
    [ -e $config_file_path ] && rm $config_file_path
    touch $config_file_path
    echo $screen_width >> $config_file_path
    echo $screen_height >> $config_file_path
    echo $grid_width >> $config_file_path
    echo $grid_height >> $config_file_path
    echo $header_offset_x >> $config_file_path
    echo $header_offset_y >> $config_file_path
    #echo $taskbar_height >> $config_file_path
}

screen()
{
    screen_width=$2
    screen_height=$3
    save_config
}

main "$@"
